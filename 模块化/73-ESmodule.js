//ESmodule是通过import来导入 export来导出
//使用ES module之后将自动使用严格模式(use strict)

//1.当我们通过在浏览器中引用JS文件时候，浏览器只会把这个JS文件当做一个普通的JS文件 会直接做一个执行
// 所以在里面如果遇到了 import这种引入 他是会报错的 所以我们在浏览器引入时候 还需要给他加一个类型
// type = "module"  <script src="main.js" type = "module"></script>
//也就是相当于把这个引入的文件当做一个模块来使用

//ESmodule的解析流程

/*
1.构建 根据地址查找JS文件将其下载，然后解析成模块记录
    解析HTML文件时候发现 <script></script>标签
    他就会创建一个module record结构 然后紧接着就会去根据这个地址去服务器里下载对应的JS文件
    然后在本地会做一个静态分析 静态分析是不会运行代码里的内容的 当他分析到这个文件里有依赖其他文件(import)
    那么他就会去服务器里请求这个依赖的文件 然后继续将这个文件转成module record结构
    如果发现多个文件依赖于同一个文件 那么他不会重复下载 只会下载第一次

2.实例化，对模块记录进行实例化，并且开始编译代码，分配内存空间，此时代码并未真正执行
    这个过程中会对我们这个模块内的代码进行一个实例化，然后分析里面有没有导出的变量
    如果这个模块内有变量的更新 那么就将这个变量加载到内存中 此时并未真的执行 值此时是undefined

3.运行代码 计算值 并且将值填充到内存中
    这个阶段会真正的运行代码
    当我们一个模块中执行到某个代码的时候 他就会去我们内存中将绑定的变量做一个执行
*/

//导出者可以更改值 当值被更改了之后 导入者的值也会发生变化
//导入者是不可以更改值的

